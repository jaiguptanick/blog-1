<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alan&#39;s Blog</title>
    <link>https://tcode2k16.github.io/blog/</link>
    <description>Recent content on Alan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 May 2018 11:28:59 +0800</lastBuildDate>
    
	<atom:link href="https://tcode2k16.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vagrant virtual machine for CTF competitions</title>
      <link>https://tcode2k16.github.io/blog/posts/vagrant-vm/</link>
      <pubDate>Fri, 18 May 2018 11:28:59 +0800</pubDate>
      
      <guid>https://tcode2k16.github.io/blog/posts/vagrant-vm/</guid>
      <description>Introduction I am running a cyber security club at my school. One of the club activities is to learn binary exploitation, most of my fellow club members don&amp;rsquo;t have linux installed on their computers and have little experience installing all the needed tools.
To make binary exploitation more accessible, I created this vagrant file that will setup all the necessary tools within a ubuntu virtual machine.
Method I picked vagrant over docker because of the follow reasons:</description>
    </item>
    
    <item>
      <title>Automated School Calendar</title>
      <link>https://tcode2k16.github.io/blog/posts/school-calendar/</link>
      <pubDate>Thu, 17 May 2018 08:45:01 +0800</pubDate>
      
      <guid>https://tcode2k16.github.io/blog/posts/school-calendar/</guid>
      <description>Introduction I have finally got the chance to experiment with google apps script, and decided to use it to make my school life easier.
I used google apps script along with the calendar api to create a web app that can auto generate my class schedule based on another calendar provided by my school.

Method The script first pulls all the events from an existing calendar given a certain range for the date, and then it generates a new calendar.</description>
    </item>
    
    <item>
      <title>SHA1 Collision</title>
      <link>https://tcode2k16.github.io/blog/posts/sha1-collision/</link>
      <pubDate>Wed, 16 May 2018 11:32:16 +0800</pubDate>
      
      <guid>https://tcode2k16.github.io/blog/posts/sha1-collision/</guid>
      <description>Introduction When I was doing the DEF CON CTF Qualifier last weekend, I came across an interesting question where you need to create two pdf files with the same SHA1 hash.
Research I know SHA1 hash was already broken when google blogged about creating the first SHA1 collision, but I was not sure that I can reproduce the process with limited hardware.
Result In the end, I came across this website that is able to generate two PDF files with the same SHA1 hash using two JPG images based on this paper.</description>
    </item>
    
  </channel>
</rss>